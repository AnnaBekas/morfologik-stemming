<project name="Stempelator" default="dist">

    <defaultexcludes add="**/CVS"/>

    <property name="build.name" value="stempelator" />
    <property name="build.ver" value="1.0.4"/>

    <property name="tmp.dir"   value="tmp" />
	<property name="build.dir" value="${tmp.dir}/build"/>
	<property name="dist.dir" value="dist"/>


	<property name="jarfile-nodict" value="${dist.dir}/${build.name}-nodict-${build.ver}.jar"/>
	<property name="jarfile" value="${dist.dir}/${build.name}-${build.ver}.jar"/>
	<property name="srczip"  value="${dist.dir}/${build.name}-${build.ver}.zip"/>

    
    <path id="compile.classpath">
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    
    
	<target name="init">
		<tstamp/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>

    
    
	<target name="clean">
		<delete dir="${build.dir}" failonerror="false"/>
		<delete dir="${dist.dir}" failonerror="false"/>
        <delete dir="${tmp.dir}" failonerror="false"/>
	</target>
	
    
    
	<target name="compile" depends="init">
		<javac classpath="${classpath}"
			destdir="${build.dir}" encoding="UTF-8">
			<classpath refid="compile.classpath" />
			<include name="**/*.java" />
            <src location="src"/>
		</javac>

        <!-- Copy additional resources to the build folder. -->
		<copy todir="${build.dir}">
			<fileset dir="src">
                <exclude name="**/*.java" />
            </fileset>
		</copy>
	</target>
	
	
	
	<target name="compile.test" depends="init,compile">
		<javac classpath="${classpath}"
			destdir="${build.dir}" encoding="UTF-8">
			<classpath refid="compile.classpath" />
			<include name="**/*.java" />
            <src location="src-test" />
		</javac>

        <!-- Copy additional resources to the build folder. -->
		<copy todir="${build.dir}">
			<fileset dir="src-test">
                <exclude name="**/*.java" />
            </fileset>
		</copy>
	</target>
    
    
    
    <target name="test" depends="compile, compile.test">
        <mkdir dir="${tmp.dir}/tests" />
        <junit printsummary="yes" haltonfailure="yes">
          <classpath refid="compile.classpath" />
          <classpath location="${build.dir}" />
        
          <formatter type="plain"/>
        
          <batchtest todir="${tmp.dir}/tests">
            <fileset dir="src-test">
              <include name="**/*Test.java"/>
            </fileset>
          </batchtest>
        </junit>
    </target>

    
    
	<target name="javadoc" depends="init">
		<javadoc sourcepath="src" packagenames="com.dawidweiss.*" destdir="${tmp.dir}/javadoc">
			<classpath refid="compile.classpath" />
		</javadoc>
	</target>
	
    
    
	<target name="jar" depends="clean, compile">
		<jar jarfile="${jarfile}">
			<fileset dir="${build.dir}" />
            <zipfileset file="LICENSE.txt" fullpath="META-INF/LICENSE.txt" />
		</jar>
		<jar jarfile="${jarfile-nodict}">
			<fileset dir="${build.dir}">
				<exclude name="res/*.dict" />
			</fileset>
            <zipfileset file="LICENSE.nodict.txt" fullpath="META-INF/LICENSE.txt" />
		</jar>
	</target>



	<target name="dist" depends="clean,jar,javadoc">
        <!-- Package source distribution -->
		<fileset dir="." id="srcdistfiles">
            <exclude name="tmp/**"/>
            <exclude name="${srczip}" />
		</fileset>
		<zip destfile="${srczip}">
			<fileset refid="srcdistfiles" />
			<zipfileset prefix="doc/api" dir="${tmp.dir}/javadoc" />
		</zip>
	</target>



    <target name="compile.stemmer">
        <description>
Compiles a stemmer table for Stempel. Uses slightly modified Egothor
code. 
        </description>
        <fail unless="stemmer.src">
Missing property 'stemmer.src'. Point at stemmer table file (input).
        </fail>

		<echo message="${build.dir}" />

        <java failonerror="true" classname="org.egothor.stemmer.Compile" fork="true">
            <classpath path="${build.dir}" />
            <jvmarg value="-Xmx1000M" />
            
            <arg value="-0E2" /> <!-- Stemmer algorithm type -->
            <arg file="${stemmer.src}" />
        </java>
    </target>
    
</project>
